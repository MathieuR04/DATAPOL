data <- read.csv("/Users/mathieurojas/Documents/Electoral Data/Chile_Effective_Number_of_Parties/Chile_Presidencial_2017.csv")

library(dplyr)
library(purrr)

# #For 2021
# data <- data %>%
#   select(-tail(names(.), 8))
  
data <- data %>%
  filter(!is.na(Nro.Voto)) %>%
  mutate(Mesa = paste0(Local, " ",Mesa)) %>%
  mutate(Local = paste0(Comuna, " ",Local)) %>%
  rename(
    Region = Región,
    Electoral_District = Distrito,
    Municipality = Comuna,
    Sub_Municipality = Circunscripción.electoral,
    Polling_Location = Local,
    Polling_Table = Mesa,
    Candidate_Number = Nro.Voto,
    Votes = Votos
  ) %>%
  mutate(Country = "Chile")



country <- data %>%
  group_by(Country, Candidate_Number) %>%
  summarise(Total_Votes = sum(Votes), .groups = "drop") %>%
  group_by(Country) %>%
  mutate(Vote_Share = Total_Votes / sum(Total_Votes)) %>%
  summarise(
    ENP = 1 / sum(Vote_Share^2),
    Top_Candidates = list(Candidate_Number[order(-Vote_Share)]),
    .groups = "drop"
  ) %>%
  mutate(
    Top_1 = map_chr(Top_Candidates, ~ .x[1] %>% as.character()),
    Top_2 = map_chr(Top_Candidates, ~ paste0(sort(.x[1:2]), collapse = "")),
    Top_3 = map_chr(Top_Candidates, ~ paste0(sort(.x[1:3]), collapse = ""))
  ) %>%
  rename(Unit_ID = Country) %>%
  mutate(Unit = "Country", .before = 1)


region <- data %>%
  group_by(Region, Candidate_Number) %>%
  summarise(Total_Votes = sum(Votes), .groups = "drop") %>%
  group_by(Region) %>%
  mutate(Vote_Share = Total_Votes / sum(Total_Votes)) %>%
  summarise(
    ENP = 1 / sum(Vote_Share^2),
    Top_Candidates = list(Candidate_Number[order(-Vote_Share)]),
    .groups = "drop"
  ) %>%
  mutate(
    Top_1 = map_chr(Top_Candidates, ~ .x[1] %>% as.character()),
    Top_2 = map_chr(Top_Candidates, ~ paste0(sort(.x[1:2]), collapse = "")),
    Top_3 = map_chr(Top_Candidates, ~ paste0(sort(.x[1:3]), collapse = ""))
  ) %>%
  rename(Unit_ID = Region) %>%
  mutate(Unit = "Region", .before = 1)



electoral_district <- data %>%
  group_by(Electoral_District, Candidate_Number) %>%
  summarise(Total_Votes = sum(Votes), .groups = "drop") %>%
  group_by(Electoral_District) %>%
  mutate(Vote_Share = Total_Votes / sum(Total_Votes)) %>%
  summarise(
    ENP = 1 / sum(Vote_Share^2),
    Top_Candidates = list(Candidate_Number[order(-Vote_Share)]),
    .groups = "drop"
  ) %>%
  mutate(
    Top_1 = map_chr(Top_Candidates, ~ .x[1] %>% as.character()),
    Top_2 = map_chr(Top_Candidates, ~ paste0(sort(.x[1:2]), collapse = "")),
    Top_3 = map_chr(Top_Candidates, ~ paste0(sort(.x[1:3]), collapse = ""))
  ) %>%
  rename(Unit_ID = Electoral_District) %>%
  mutate(Unit = "Electoral District", .before = 1)




municipality <- data %>%
  group_by(Municipality, Candidate_Number) %>%
  summarise(Total_Votes = sum(Votes), .groups = "drop") %>%
  group_by(Municipality) %>%
  mutate(Vote_Share = Total_Votes / sum(Total_Votes)) %>%
  summarise(
    ENP = 1 / sum(Vote_Share^2),
    Top_Candidates = list(Candidate_Number[order(-Vote_Share)]),
    .groups = "drop"
  ) %>%
  mutate(
    Top_1 = map_chr(Top_Candidates, ~ .x[1] %>% as.character()),
    Top_2 = map_chr(Top_Candidates, ~ paste0(sort(.x[1:2]), collapse = "")),
    Top_3 = map_chr(Top_Candidates, ~ paste0(sort(.x[1:3]), collapse = ""))
  ) %>%
  rename(Unit_ID = Municipality) %>%
  mutate(Unit = "Municipality", .before = 1)


sub_municipality <- data %>%
  group_by(Sub_Municipality, Candidate_Number) %>%
  summarise(Total_Votes = sum(Votes), .groups = "drop") %>%
  group_by(Sub_Municipality) %>%
  mutate(Vote_Share = Total_Votes / sum(Total_Votes)) %>%
  summarise(
    ENP = 1 / sum(Vote_Share^2),
    Top_Candidates = list(Candidate_Number[order(-Vote_Share)]),
    .groups = "drop"
  ) %>%
  mutate(
    Top_1 = map_chr(Top_Candidates, ~ .x[1] %>% as.character()),
    Top_2 = map_chr(Top_Candidates, ~ paste0(sort(.x[1:2]), collapse = "")),
    Top_3 = map_chr(Top_Candidates, ~ paste0(sort(.x[1:3]), collapse = ""))
  ) %>%
  rename(Unit_ID = Sub_Municipality) %>%
  mutate(Unit = "Sub Municipality", .before = 1)


polling_location <- data %>%
  group_by(Polling_Location, Candidate_Number) %>%
  summarise(Total_Votes = sum(Votes), .groups = "drop") %>%
  group_by(Polling_Location) %>%
  mutate(Vote_Share = Total_Votes / sum(Total_Votes)) %>%
  summarise(
    ENP = 1 / sum(Vote_Share^2),
    Top_Candidates = list(Candidate_Number[order(-Vote_Share)]),
    .groups = "drop"
  ) %>%
  mutate(
    Top_1 = map_chr(Top_Candidates, ~ .x[1] %>% as.character()),
    Top_2 = map_chr(Top_Candidates, ~ paste0(sort(.x[1:2]), collapse = "")),
    Top_3 = map_chr(Top_Candidates, ~ paste0(sort(.x[1:3]), collapse = ""))
  ) %>%
  rename(Unit_ID = Polling_Location) %>%
  mutate(Unit = "Polling Location", .before = 1)


polling_table <- data %>%
  group_by(Polling_Table, Candidate_Number) %>%
  summarise(Total_Votes = sum(Votes), .groups = "drop") %>%
  group_by(Polling_Table) %>%
  mutate(Vote_Share = Total_Votes / sum(Total_Votes)) %>%
  summarise(
    ENP = 1 / sum(Vote_Share^2),
    Top_Candidates = list(Candidate_Number[order(-Vote_Share)]),
    .groups = "drop"
  ) %>%
  mutate(
    Top_1 = map_chr(Top_Candidates, ~ .x[1] %>% as.character()),
    Top_2 = map_chr(Top_Candidates, ~ paste0(sort(.x[1:2]), collapse = "")),
    Top_3 = map_chr(Top_Candidates, ~ paste0(sort(.x[1:3]), collapse = ""))
  ) %>%
  rename(Unit_ID = Polling_Table) %>%
  mutate(Unit = "Polling Table", .before = 1)


final_data <- bind_rows(
  country,
  region,
  electoral_district,
  municipality,
  sub_municipality,
  polling_location,
  polling_table
)


# final_2021 <- final_data

# final_2013 <- final_data

final_2017 <- final_data


final_2021$Year <- 2021
final_2017$Year <- 2017
final_2013$Year <- 2013

final_merged <- bind_rows(
  final_2021,
  final_2017,
  final_2013
)


library(ggplot2)

final_merged$Unit <- factor(final_merged$Unit, levels = c(
  "Country",
  "Region",
  "Electoral District",
  "Municipality",
  "Sub Municipality",
  "Polling Location",
  "Polling Table"
))

# Then plot
ggplot(final_merged, aes(x = Unit, y = ENP)) +
  geom_boxplot() +
  labs(title = "Plot of ENP", x = "", y = "ENP") +
  theme_minimal() +
  facet_wrap(~ Year, nrow = 1)



library(dplyr)

avg_ENP <- final_data %>%
  group_by(Unit) %>%
  summarise(Average_ENP = mean(ENP, na.rm = TRUE))




library(sf)
library(dplyr)
library(ggplot2)



urls <- paste0("https://raw.githubusercontent.com/caracena/chile-geojson/master/",1:16,".geojson")

municipalities_map <- urls %>%
  map(st_read, quiet = TRUE) %>%  # read each GeoJSON quietly
  bind_rows()

library(stringi)
municipalities_map <- municipalities_map %>%
  mutate(
    Comuna = Comuna %>%
      stri_trans_general("Latin-ASCII") %>%
      toupper()
  )


municipalities_2021 <- final_merged %>%
  filter(Unit == "Municipality", Year == 2021) %>%
  mutate(
    Unit_ID = Unit_ID %>%
      stri_trans_general("Latin-ASCII")
  )
  

municipalities_2021 <- municipalities_2021 %>%
  mutate(Unit_ID = ifelse(Unit_ID == "CABO DE HORNOS(EX-NAVARINO)",
                          "CABO DE HORNOS",
                          Unit_ID))

municipalities_map_2021 <- municipalities_map %>%
  left_join(municipalities_2021, by = c("Comuna" = "Unit_ID"))


library(ggplot2)

ggplot(municipalities_map_2021) +
  geom_sf(aes(fill = ENP), color = "white", size = 0.1) +
  scale_fill_viridis_c(option = "plasma", na.value = "grey90") +
  theme_minimal() +
  labs(
    fill = "ENP",
    title = "Effective Number of Parties (ENP) by Municipality, 2021",
    caption = "Source: Your ENP dataset + Chile GeoJSON"
  )